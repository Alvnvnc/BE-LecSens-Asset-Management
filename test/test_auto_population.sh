#!/bin/bash

# Test Script for IoT Sensor Reading Auto-Population Feature
# This script demonstrates the new auto-population endpoints

BASE_URL="http://localhost:8080/api/v1"
SUPERADMIN_URL="http://localhost:8080/api/v1/superadmin"

echo "======================================"
echo "IoT Sensor Reading Auto-Population Test"
echo "======================================"
echo ""

# Test 1: Get auto-population options
echo "1. Testing GET auto-population options endpoint..."
echo "URL: ${BASE_URL}/iot-sensor-readings/auto-populate/options?sensor_type_id=<SENSOR_TYPE_ID>"
echo ""
echo "Example curl command:"
echo "curl -X GET \"${BASE_URL}/iot-sensor-readings/auto-populate/options?sensor_type_id=550e8400-e29b-41d4-a716-446655440000\" \\"
echo "  -H \"Authorization: Bearer YOUR_JWT_TOKEN\" \\"
echo "  -H \"Content-Type: application/json\""
echo ""

# Test 2: Create reading with auto-population
echo "2. Testing POST auto-populate reading endpoint..."
echo "URL: ${SUPERADMIN_URL}/iot-sensor-readings/auto-populate"
echo ""
echo "Example curl command with auto-population (without asset_sensor_id):"
echo "curl -X POST \"${SUPERADMIN_URL}/iot-sensor-readings/auto-populate\" \\"
echo "  -H \"Authorization: Bearer YOUR_JWT_TOKEN\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{"
echo "    \"sensor_type_id\": \"550e8400-e29b-41d4-a716-446655440000\","
echo "    \"mac_address\": \"AA:BB:CC:DD:EE:FF\""
echo "  }'"
echo ""

echo "Example curl command with manual asset_sensor_id:"
echo "curl -X POST \"${SUPERADMIN_URL}/iot-sensor-readings/auto-populate\" \\"
echo "  -H \"Authorization: Bearer YOUR_JWT_TOKEN\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{"
echo "    \"asset_sensor_id\": \"660e8400-e29b-41d4-a716-446655440001\","
echo "    \"sensor_type_id\": \"550e8400-e29b-41d4-a716-446655440000\","
echo "    \"mac_address\": \"AA:BB:CC:DD:EE:FF\""
echo "  }'"
echo ""

# Test scenarios
echo "======================================"
echo "Test Scenarios for Auto-Population:"
echo "======================================"
echo ""
echo "Scenario 1: Single Asset Sensor for Sensor Type"
echo "- Should auto-populate the asset_sensor_id"
echo "- Returns success with the reading created"
echo ""
echo "Scenario 2: Multiple Asset Sensors for Sensor Type"
echo "- Should return error asking user to specify asset_sensor_id"
echo "- Provides list of available options"
echo ""
echo "Scenario 3: No Asset Sensors for Sensor Type"
echo "- Should return error indicating no sensors found"
echo ""
echo "Scenario 4: Manual asset_sensor_id provided"
echo "- Should use the provided asset_sensor_id"
echo "- Should validate that it matches the sensor_type_id"
echo ""

echo "======================================"
echo "Expected Response Formats:"
echo "======================================"
echo ""
echo "Auto-population options response:"
echo "{"
echo "  \"message\": \"Auto-population options retrieved successfully\","
echo "  \"data\": {"
echo "    \"sensor_type_id\": \"550e8400-e29b-41d4-a716-446655440000\","
echo "    \"available_options\": ["
echo "      {"
echo "        \"asset_sensor_id\": \"660e8400-e29b-41d4-a716-446655440001\","
echo "        \"asset_sensor_name\": \"Temperature Sensor 1\","
echo "        \"asset_id\": \"770e8400-e29b-41d4-a716-446655440002\","
echo "        \"asset_name\": \"Boiler Unit A\","
echo "        \"location_id\": \"880e8400-e29b-41d4-a716-446655440003\","
echo "        \"location_name\": \"Factory Floor 1\""
echo "      }"
echo "    ],"
echo "    \"message\": \"1 asset sensor found for this sensor type\""
echo "  }"
echo "}"
echo ""

echo "Auto-populate reading success response:"
echo "{"
echo "  \"message\": \"IoT sensor reading created successfully with auto-population\","
echo "  \"data\": {"
echo "    \"id\": \"990e8400-e29b-41d4-a716-446655440004\","
echo "    \"tenant_id\": \"aa0e8400-e29b-41d4-a716-446655440005\","
echo "    \"asset_sensor_id\": \"660e8400-e29b-41d4-a716-446655440001\","
echo "    \"sensor_type_id\": \"550e8400-e29b-41d4-a716-446655440000\","
echo "    \"mac_address\": \"AA:BB:CC:DD:EE:FF\","
echo "    \"reading_time\": \"2025-06-10T10:30:00Z\","
echo "    \"created_at\": \"2025-06-10T10:30:00Z\""
echo "  }"
echo "}"
echo ""

echo "Multiple options error response:"
echo "{"
echo "  \"error\": \"Bad Request\","
echo "  \"message\": \"Multiple asset sensors found for this sensor type. Please specify asset_sensor_id. Available options: Asset Sensor 1, Asset Sensor 2\""
echo "}"
echo ""

echo "======================================"
echo "Route Information:"
echo "======================================"
echo ""
echo "New Routes Added:"
echo "1. GET /api/v1/iot-sensor-readings/auto-populate/options"
echo "   - Public route (requires tenant validation)"
echo "   - Query parameter: sensor_type_id (required)"
echo "   - Returns available asset sensors for the sensor type"
echo ""
echo "2. POST /api/v1/superadmin/iot-sensor-readings/auto-populate"
echo "   - SuperAdmin only route"
echo "   - Request body: CreateIoTSensorReadingWithAutoPopulationRequest"
echo "   - Auto-populates asset_sensor_id if not provided"
echo ""

echo "======================================"
echo "Implementation Details:"
echo "======================================"
echo ""
echo "Files Modified/Created:"
echo "- DTO: /asset_management/helpers/dto/iot_sensor_reading_dto.go"
echo "  * CreateIoTSensorReadingWithAutoPopulationRequest"
echo "  * AutoPopulationOptionsResponse"
echo "  * AssetSensorLocationInfo"
echo ""
echo "- Repository: /asset_management/data-layer/repository/iot_sensor_reading_repository.go"
echo "  * GetAssetSensorsBySensorType() method"
echo ""
echo "- Service: /asset_management/domain-layer/service/iot_sensor_reading_service.go"
echo "  * CreateIoTSensorReadingWithAutoPopulation() method"
echo "  * GetAutoPopulationOptions() method"
echo ""
echo "- Controller: /asset_management/presentation-layer/controller/iot_sensor_reading_controller.go"
echo "  * CreateReadingWithAutoPopulation() method"
echo "  * GetAutoPopulationOptions() method"
echo ""
echo "- Routes: /asset_management/presentation-layer/routes/iot_sensor_reading.go"
echo "  * Added new route configurations"
echo ""

echo "======================================"
echo "Auto-Population Logic:"
echo "======================================"
echo ""
echo "1. If asset_sensor_id is provided:"
echo "   - Use the provided asset_sensor_id"
echo "   - Validate it exists and matches sensor_type_id"
echo ""
echo "2. If asset_sensor_id is NOT provided:"
echo "   - Query database for asset sensors with given sensor_type_id"
echo "   - If exactly 1 found: auto-populate with that asset_sensor_id"
echo "   - If multiple found: return error with list of options"
echo "   - If none found: return error indicating no sensors available"
echo ""
echo "3. Multi-tenancy support:"
echo "   - Regular users: filtered by their tenant_id"
echo "   - SuperAdmin: can access all tenants or specific tenant"
echo ""

echo "Test completed!"
echo ""
